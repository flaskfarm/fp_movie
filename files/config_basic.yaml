######################################################################
# 영화 파일처리 고급 설정
# 버전 : 1.0
######################################################################

타겟 설정:
  - 이름: "타겟조건 국내영화"
    타겟루트: "M:\\라이브러리\\국내"
    타겟포맷: "{TITLE_FIRST_CHAR}/{TITLE} ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.country in ['한국']:
          return True

  - 이름: "타겟조건 아시아영화"
    타겟루트: "M:\\라이브러리\\아시아"
    타겟포맷: "{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.country in ['일본', '중국', '대만', '홍콩']:
          return True

  - 이름: "타겟조건 외국영화 한국어 음성(더빙)"
    타겟루트: "M:\\라이브러리\\외국(한국어)"
    타겟포맷: "{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.country not in ['한국'] \
          and db_item.include_kor_audio: \
          return True

  - 이름: "타겟조건 외국영화 한국어자막 내장"
    타겟루트: "M:\\라이브러리\\외국(정식자막)"
    타겟포맷: "{TITLE_FIRST_CHAR}/{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.country not in ['한국'] \
          and db_item.include_kor_subtitle: \
          return True

  - 이름: "타겟조건 UHD 외국영화 한국어자막 내장"
    타겟루트: "M:\\라이브러리\\UHD(정식자막)"
    타겟포맷: "{TITLE_FIRST_CHAR}/{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if int(db_item.resolution.split('x')[0]) > 3000 \
          and db_item.country != '한국' \
          and db_item.include_kor_subtitle: 
          return True
   
  - 이름: "타겟조건 19금"
    타겟루트: "M:\\라이브러리\\청소년관람불가"
    타겟포맷: "{TITLE} ({YEAR})"
    코드: |
      def check(db_item):
        if db_item.meta.get('mpaa') in ['청소년관람불가', '청소년 관람불가']: 
          return True

  - 이름: "타겟조건 애니메이션"
    타겟루트: "M:\\라이브러리\\애니"
    타겟포맷: "{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.genre == '애니메이션':
          return True

  - 이름: "타겟조건 VOD"
    타겟루트: "M:\\라이브러리\\VOD"
    타겟포맷: "{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if db_item.is_vod:
          return True

  - 이름: "타겟조건 Bluray"
    타겟루트: "M:\\라이브러리\\Bluray"
    타겟포맷: "{TITLE} [{TITLE_EN}] ({YEAR}) [{COUNTRY}-{GENRE}-{RESOLUTION}-{VIDEO_CODEC}-{AUDIO_CODEC}.{AUDIO_COUNT}{INCLUDE_KOR_AUDIO}-{SUBTITLE_COUNT}{INCLUDE_KOR_SUBTITLE}.{FILE_SUBTITLE_COUNT}{INCLUDE_KOR_FILE_SUBTITLE}]"
    코드: |
      def check(db_item):
        if "Bluray" in db_item.main_video_filename:
          return True


#타겟 조건 체크 우선순위:
#  - "타겟조건 애니메이션"
#  - "타겟조건 VOD"
#  - "타겟조건 UHD 외국영화 한국어자막 내장"
#  - "타겟조건 외국영화 한국어자막 내장"
#  - "타겟조건 외국영화 한국어 음성(더빙)"
#  - "타겟조건 국내영화"


폴더명 형식: |
  def folder_format(data, db_item):
    width = int(db_item.resolution.split('x')[0])
    if width == 1920: ret = 'FHD'
    elif width > 1920: ret = 'FHD'
    elif width < 1920 and width >= 1280: ret = 'HD'
    else: ret = 'SD'
    data['MY_RESOLUTION'] = ret

    if db_item.country in ['미국', '영국']: ret = '서양'
    elif db_item.country in ['일본', '중국']: ret = '동양'
    elif db_item.country == '한국': ret = '한국'
    else: ret = '기타'
    data['COUNTRY_GROUP'] = ret
    return data


타겟포맷 REPLACE 규칙:
  - ".1-|-"
  - ".1K-|.K-"
  - "-0.0]|]"
  - " [] | "


#PLEX_MATE_SCAN:
#  - URL: "http://localhost:8888"
#    경로변경:
#      - 소스: "L:"
#        타겟: "H:\\내 드라이브"
#      - 소스:
#        타켓:

